<!-- Caution! In some versions of Visual Studio specifying '*' as the width
     of a DataGridTextColumn messes up the designer window. The resulting
     exectable works just fine though. '*' needs to be the width of some
     columns here, so if you want to use the designer, do a search for
     DataGridTextColumn and remove the stars temporarily. -->
    
<Window x:Class="Auremo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:Auremo"
        Title="Auremo MPD Client"
        MinWidth="720" MinHeight="540"
        Background="{StaticResource BackgroundBrush}"
        PreviewKeyDown="OnKeyDown"
        Closing="OnExit">
    <Window.Resources>
        <l:IntToTimecodeConverter x:Key="IntToTimecodeConverter"/>
    </Window.Resources>
    <Window.ToolTip>
        <ToolTip Name="m_MousePointerHint" HasDropShadow="False" BorderThickness="0" Foreground="{StaticResource TextBrush}" Background="{StaticResource ToolTipBackgroundBrush}" IsOpen="False" Visibility="Hidden" IsHitTestVisible="False"/>
    </Window.ToolTip>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="500*"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <TabControl Name="m_Tabs" Style="{StaticResource TabControlStyle}" Margin="4">
            <TabItem Name="m_MusicTab" Header="Music" Style="{StaticResource TabItemStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TabControl Name="m_CollectionBrowsingModes" Style="{StaticResource TabControlStyle}" TabStripPlacement="Bottom">
                        <TabItem Header="Artist list" Style="{StaticResource BottomTabItemStyle}" Width="80">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <DataGrid Name="m_ArtistsView"
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}"
                                          CellStyle="{StaticResource LibraryCellStyle}"
                                          Margin="0,0,0,3"
                                          ItemsSource="{Binding Path=Artists}"
                                          SelectionChanged="OnSelectedArtistsChanged"
                                          PreviewKeyDown="OnArtistViewKeyDown"
                                          PreviewMouseDown="OnDataGridMouseDown"
                                          MouseMove="OnMouseMoveDragDrop"
                                          MouseUp="OnDataGridMouseUp">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Artist" Width="250*" Binding="{Binding}" CanUserResize="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid Name="m_AlbumsBySelectedArtistsView"
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}"
                                          CellStyle="{StaticResource LibraryCellStyle}"
                                          Grid.Row="1"
                                          Margin="0,1,0,1"
                                          ItemsSource="{Binding Path=AlbumsBySelectedArtists}"
                                          SelectionChanged="OnSelectedAlbumsChanged"
                                          PreviewKeyDown="OnAlbumViewKeyDown"
                                          PreviewMouseDown="OnDataGridMouseDown"
                                          MouseMove="OnMouseMoveDragDrop"
                                          MouseUp="OnDataGridMouseUp">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Year" MinWidth="50" MaxWidth="50" Binding="{Binding Path=PrintableYear}"/>
                                        <DataGridTextColumn Header="Title" Width="200*" Binding="{Binding Path=Title}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid Name="m_SongsOnSelectedAlbumsView"
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}"
                                          CellStyle="{StaticResource LibraryCellStyle}"
                                          Grid.Row="2"
                                          Margin="0,3,0,0"
                                          ItemsSource="{Binding Path=SongsOnSelectedArtistAlbums}"
                                          PreviewKeyDown="OnSongViewKeyDown"
                                          MouseDoubleClick="OnSongsOnAlbumsViewDoubleClicked"
                                          PreviewMouseDown="OnDataGridMouseDown"
                                          MouseMove="OnMouseMoveDragDrop"
                                          MouseUp="OnDataGridMouseUp">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Track#" MinWidth="50" MaxWidth="50" Binding="{Binding Track}"/>
                                        <DataGridTextColumn Header="Title" Width="200*" Binding="{Binding Title}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Artist tree" Style="{StaticResource BottomTabItemStyle}" Width="80">
                            <TreeView Name="m_ArtistTree" ItemsSource="{Binding ArtistTree}" Style="{StaticResource TreeViewStyle}" ItemContainerStyle="{StaticResource TreeViewContainerStyle}" PreviewMouseLeftButtonDown="OnTreeViewMouseDown" MouseMove="OnMouseMoveDragDrop" MouseUp="OnTreeViewMouseUp" PreviewKeyDown="OnTreeViewKeyDown" SelectedItemChanged="OnTreeViewSelectionChanged">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type l:TreeViewNode}" ItemsSource="{Binding Children}">
                                        <TextBlock Text="{Binding DisplayString}"/>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>
                        </TabItem>
                        <TabItem Header="Genre list" Style="{StaticResource BottomTabItemStyle}" Width="80">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <DataGrid Name="m_GenresView"
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}"
                                          CellStyle="{StaticResource LibraryCellStyle}"
                                          Margin="0,0,0,3"
                                          ItemsSource="{Binding Path=Genres}"
                                          SelectionChanged="OnSelectedGenresChanged"
                                          PreviewKeyDown="OnGenreViewKeyDown"
                                          PreviewMouseDown="OnDataGridMouseDown"
                                          MouseMove="OnMouseMoveDragDrop"
                                          MouseUp="OnDataGridMouseUp">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Genre" Width="250*" Binding="{Binding}" CanUserResize="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid Name="m_AlbumsOfSelectedGenresView"
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}"
                                          CellStyle="{StaticResource LibraryCellStyle}"
                                          Grid.Row="1"
                                          Margin="0,1,0,1"
                                          ItemsSource="{Binding Path=AlbumsOfSelectedGenres}"
                                          SelectionChanged="OnSelectedGenreAlbumsChanged"
                                          PreviewKeyDown="OnGenreAlbumsViewKeyDown"
                                          PreviewMouseDown="OnDataGridMouseDown"
                                          MouseMove="OnMouseMoveDragDrop"
                                          MouseUp="OnDataGridMouseUp">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Artist" Width="Auto" Binding="{Binding Path=Artist}"/>
                                        <DataGridTextColumn Header="Year" MinWidth="50" MaxWidth="50" Binding="{Binding Path=PrintableYear}"/>
                                        <DataGridTextColumn Header="Title" Width="100*" Binding="{Binding Path=Title}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid Name="m_SongsOnSelectedGenreAlbumsView"
                                          Style="{StaticResource DataGridStyle}"
                                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                          RowStyle="{StaticResource DataGridRowStyle}"
                                          CellStyle="{StaticResource LibraryCellStyle}"
                                          Grid.Row="2"
                                          Margin="0,3,0,0"
                                          ItemsSource="{Binding Path=SongsOnSelectedAlbumsOfSelectedGenres}"
                                          PreviewKeyDown="OnSongViewKeyDown"
                                          MouseDoubleClick="OnSongsOnSelectedAlbumsOfSelectedGenresViewDoubleClicked"
                                          PreviewMouseDown="OnDataGridMouseDown"
                                          MouseMove="OnMouseMoveDragDrop"
                                          MouseUp="OnDataGridMouseUp">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Track#" MinWidth="50" MaxWidth="50" Binding="{Binding Track}"/>
                                        <DataGridTextColumn Header="Title" Width="200*" Binding="{Binding Title}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Genre tree" Style="{StaticResource BottomTabItemStyle}" Width="80">
                            <TreeView Name="m_GenreTree" ItemsSource="{Binding GenreTree}" Style="{StaticResource TreeViewStyle}" ItemContainerStyle="{StaticResource TreeViewContainerStyle}" PreviewMouseLeftButtonDown="OnTreeViewMouseDown" MouseMove="OnMouseMoveDragDrop" MouseUp="OnTreeViewMouseUp" PreviewKeyDown="OnTreeViewKeyDown" SelectedItemChanged="OnTreeViewSelectionChanged">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type l:TreeViewNode}" ItemsSource="{Binding Children}">
                                        <TextBlock Text="{Binding DisplayString}"/>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>
                        </TabItem>
                        <TabItem Header="Filesystem" Style="{StaticResource BottomTabItemStyle}" Width="80">
                            <TreeView Name="m_DirectoryTree" ItemsSource="{Binding DirectoryTree}" Style="{StaticResource TreeViewStyle}" ItemContainerStyle="{StaticResource TreeViewContainerStyle}" PreviewMouseLeftButtonDown="OnTreeViewMouseDown" MouseMove="OnMouseMoveDragDrop" MouseUp="OnTreeViewMouseUp" PreviewKeyDown="OnTreeViewKeyDown" SelectedItemChanged="OnTreeViewSelectionChanged">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type l:TreeViewNode}" ItemsSource="{Binding Children}">
                                        <TextBlock Text="{Binding DisplayString}"/>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>
                        </TabItem>
                    </TabControl>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="27"/>
                        </Grid.RowDefinitions>
                        <Border BorderThickness="1" BorderBrush="{StaticResource BorderBrush}" Margin="4,0,0,0">
                            <DataGrid Name="m_PlaylistView"
                                      Style="{StaticResource DataGridStyle}"
                                      ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                                      RowStyle="{StaticResource DataGridRowStyle}"
                                      CellStyle="{StaticResource PlaylistCellStyle}"
                                      Margin="4"
                                      ItemsSource="{Binding Path=Items}"
                                      AllowDrop="True"
                                      PreviewKeyDown="OnPlaylistViewKeyDown"
                                      MouseDoubleClick="OnPlaylistViewDoubleClicked"
                                      PreviewMouseDown="OnDataGridMouseDown"
                                      MouseMove="OnMouseMoveDragDrop"
                                      DragOver="OnPlaylistViewDragOver"
                                      DragLeave="OnPlaylistViewDragLeave"
                                      Drop="OnPlaylistViewDrop"
                                      MouseUp="OnDataGridMouseUp">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Artist" Width="Auto" Binding="{Binding Path=Song.Artist}"/>
                                    <DataGridTextColumn Header="Album" Width="Auto" Binding="{Binding Path=Song.Album}"/>
                                    <DataGridTextColumn Header="Title" Width="150*" Binding="{Binding Path=Song.Title}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>
                        <Line Name="m_DropPositionIndicator" Grid.Column="1" X1="5" X2="320" Y1="50" Y2="50" IsHitTestVisible="False" Visibility="Hidden" StrokeThickness="2" Stroke="{StaticResource DropPositionIndicatorBrush}"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Name="m_SettingsTab" Header="Settings" Style="{StaticResource TabItemStyle}">
                <Grid Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="35"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Server name or address:" Style="{StaticResource OptionsLabelStyle}" Width="140"/>
                        <TextBox Name="m_ServerEntry" Text="localhost" Style="{StaticResource OptionsTextBoxStyle}" Width="165"/>
                        <Label Content="Port:" Style="{StaticResource OptionsLabelStyle}" Width="37"/>
                        <TextBox Name="m_PortEntry" Text="6600" Style="{StaticResource OptionsTextBoxStyle}" Width="50" PreviewTextInput="OnNumericOptionPreviewTextInput" LostFocus="OnNumericOptionLostFocus"/>
                        <Label Content="(1 - 65535, typically 6600)" Style="{StaticResource OptionsLabelStyle}" Width="150"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                        <Label Content="Update server status and draw user interface every" Style="{StaticResource OptionsLabelStyle}" Width="350"/>
                        <TextBox Name="m_UpdateIntervalEntry" Text="500" Style="{StaticResource OptionsTextBoxStyle}" Width="50" PreviewTextInput="OnNumericOptionPreviewTextInput" LostFocus="OnNumericOptionLostFocus"/>
                        <Label Content="milliseconds (min 100, max 5000)" Style="{StaticResource OptionsLabelStyle}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2">
                        <Label Content="After connection is lost, attempt reconnection every" Style="{StaticResource OptionsLabelStyle}" Width="350"/>
                        <TextBox Name="m_ReconnectIntervalEntry" Text="10" Style="{StaticResource OptionsTextBoxStyle}" Width="50" PreviewTextInput="OnNumericOptionPreviewTextInput" LostFocus="OnNumericOptionLostFocus"/>
                        <Label Content="seconds (0 = never, max 3600)" Style="{StaticResource OptionsLabelStyle}"/>
                    </StackPanel>
                    <CheckBox Name="m_EnableVolumeControl" Content="Enable volume slider" IsChecked="True" Grid.Row="3" Style="{StaticResource OptionsCheckBoxStyle}"/>
                    <CheckBox Name="m_DisplaySeparatePlayAndPauseButtons" Content="Display separate play and pause buttons" IsChecked="True" Grid.Row="4" Style="{StaticResource OptionsCheckBoxStyle}"/>
                    <DockPanel LastChildFill="False" Grid.Row="6">
                        <Button Name="m_SaveSettingsButton" Content="Apply and save settings" Width="150" Margin="20,2,2,2" DockPanel.Dock="Right" Click="OnSaveSettingsClicked"/>
                        <Button Name="m_LoadSettingsButton" Content="Restore saved settings" Width="150" Margin="2,2,2,2" DockPanel.Dock="Right" Click="OnLoadSettingsClicked"/>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="About" Style="{StaticResource TabItemStyle}">
                <Border Grid.Row="0" Width="550" BorderThickness="0" Background="{StaticResource ToolTipBackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Margin="3">
                    <ScrollViewer>
                        <TextBlock Name="m_AboutBox" Margin="15,5,0,5"/>
                    </ScrollViewer>
                </Border>
            </TabItem>
            <TabItem Header="Log" Style="{StaticResource TabItemStyle}" Visibility="Hidden">
                <ListBox Name="m_LogLines"/>
            </TabItem>
        </TabControl>
        <Border Grid.Row="1">
            <DockPanel Name="m_PlaybackControls" Margin="5,0">
                <DockPanel.Resources>
                    <Thickness x:Key="PassiveImageMargin">5</Thickness>
                    <Thickness x:Key="ActiveImageMargin">3</Thickness>
                </DockPanel.Resources>
                <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="0,5,0,0">
                    <!-- m_PlayPosition and m_SeekBar cannot use bindings for play position because the
                         seek bar can be dragged by the user and the twitchy slider looks ugly. Updates
                         are done using a more manual event instead. -->
                    <Label Name="m_PlayPosition" DockPanel.Dock="Left" VerticalAlignment="Center" Width="40" FontSize="9" Foreground="{StaticResource ActiveBrush}" Content="00:00"/>
                    <Label Name="m_SongLength" DockPanel.Dock="Right" VerticalAlignment="Center" Width="40" FontSize="9" Foreground="{StaticResource ActiveBrush}" Content="{Binding Path=SongLength, Converter={StaticResource IntToTimecodeConverter}}"/>
                    <Slider Name="m_SeekBar" Margin="2,2,2,2" VerticalAlignment="Center" Minimum="0" Value="0" Maximum="{Binding Path=SongLength}" ValueChanged="OnSeekBarDrag" PreviewMouseDown="OnSeekBarDragStart" PreviewMouseUp="OnSeekBarDragEnd"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="0,0,0,5">
                    <Button Name="m_BackButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnBackButtonClicked">
                        <Image Source="Graphics/back.png" Margin="{StaticResource PassiveImageMargin}"/>
                    </Button>
                    <Button Name="m_PlayButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnPlayButtonClicked">
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                            <Setter Property="Image.Source" Value="Graphics/play.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                            <Setter Property="Image.Source" Value="Graphics/playing.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="m_PauseButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnPauseButtonClicked">
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsPaused}" Value="False">
                                            <Setter Property="Image.Source" Value="Graphics/pause.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsPaused}" Value="True">
                                            <Setter Property="Image.Source" Value="Graphics/paused.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="m_PlayPauseButton" Style="{StaticResource PlaybackButtonBaseStyle}" Visibility="Collapsed" DockPanel.Dock="Left" Click="OnPlayPauseButtonClicked">
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=State}" Value="play">
                                            <Setter Property="Image.Source" Value="Graphics/playing.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=State}" Value="pause">
                                            <Setter Property="Image.Source" Value="Graphics/paused.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=State}" Value="stop">
                                            <Setter Property="Image.Source" Value="Graphics/play.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=State}" Value="">
                                            <Setter Property="Image.Source" Value="Graphics/play.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="m_StopButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnStopButtonClicked">
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsStopped}" Value="False">
                                            <Setter Property="Image.Source" Value="Graphics/stop.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsStopped}" Value="True">
                                            <Setter Property="Image.Source" Value="Graphics/stopped.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="m_SkipButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnSkipButtonClicked">
                        <Image Source="Graphics/skip.png" Margin="{StaticResource PassiveImageMargin}"/>
                    </Button>
                    <Border Width="200" Margin="5,0,5,0" BorderBrush="Transparent">
                        <!-- The volume slider cannot use straight property bindings, just like the seek bar. -->
                        <Slider Name="m_VolumeControl" Minimum="0" Maximum="100" TickFrequency="1" VerticalAlignment="Center" Margin="5,0" ValueChanged="OnVolumeSliderDragged"/>
                    </Border>
                    <Button Name="m_ToggleRandomButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnToggleRandomClicked">
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Random}" Value="False">
                                            <Setter Property="Image.Source" Value="Graphics/random.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Random}" Value="True">
                                            <Setter Property="Image.Source" Value="Graphics/randomized.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="m_ToggleRepeatButton" Style="{StaticResource PlaybackButtonBaseStyle}" DockPanel.Dock="Left" Click="OnToggleRepeatClicked">
                        <Image>
                            <Image.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Repeat}" Value="False">
                                            <Setter Property="Image.Source" Value="Graphics/repeat.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource PassiveImageMargin}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Repeat}" Value="True">
                                            <Setter Property="Image.Source" Value="Graphics/repeating.png"/>
                                            <Setter Property="Image.Margin" Value="{StaticResource ActiveImageMargin}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                    <Button Name="m_ToggleConnectionButton" Content="Offline mode" Style="{StaticResource PlaybackButtonBaseStyle}" Width="100" DockPanel.Dock="Right" Click="OnToggleOnlineOfflineClicked"/>
                </DockPanel>
            </DockPanel>
        </Border>
        <Border Grid.Row="2">
            <StatusBar Margin="2,2,2,2">
                <StatusBarItem HorizontalAlignment="Left">
                    <Label Name="m_PlayStatusMessage" Content="{Binding Path=PlayStatusDescription}"/>
                </StatusBarItem>
                <StatusBarItem Name="m_ConnectionStatusDescription" HorizontalAlignment="Right">
                    <Label Content="{Binding Path=StatusDescription}"/>
                </StatusBarItem>
            </StatusBar>
        </Border>
    </Grid>
</Window>
